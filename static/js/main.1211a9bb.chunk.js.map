{"version":3,"sources":["assets/income.svg","assets/outcome.svg","assets/total.svg","assets/logo.svg","assets/alert.svg","services/api.ts","components/Header/styles.ts","components/Header/index.tsx","components/LoaderCardBalance/index.tsx","components/LoaderCardTransaction/styles.ts","components/LoaderCardTransaction/index.tsx","utils/formatValue.ts","utils/formatDate.ts","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","components/FileList/styles.ts","components/FileList/index.tsx","components/Upload/styles.ts","components/Upload/index.tsx","pages/Import/styles.ts","pages/Import/index.tsx","routes/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["module","exports","api","axios","create","baseURL","Container","styled","div","size","Header","src","Logo","alt","exact","to","activeClassName","LoaderCardBalance","color","shadeValue","speed","width","height","viewBox","backgroundColor","foregroundColor","shade","x","y","rx","ry","LoaderCardTransaction","formatValue","value","Intl","NumberFormat","style","currency","format","formatDate","date","DateTimeFormat","CardContainer","h1","section","Card","total","TableContainer","Dashboard","useState","transactions","localStorage","getItem","JSON","parse","setTransactions","balance","setBalance","showLoader","setShowLoader","alreadyLoaded","useEffect","a","get","data","transactionsFormatted","map","transaction","formattedValue","balanceFormatted","income","outcome","setItem","stringify","setTimeout","removeItem","loadTransactions","data-testid","_","key","id","className","title","type","category","Date","created_at","ul","FileInfo","FileList","files","uploadedFile","name","readableSize","dragActive","css","dragReject","DropContainer","attrs","props","isDragActive","isDragReject","messageColors","default","error","success","UploadMessage","p","Upload","onUpload","accept","onDropAccepted","getRootProps","getInputProps","isDragRejest","renderDragMessage","Title","ImportFileContainer","Footer","Import","uploadedFiles","setUploadedFiles","history","useHistory","FormData","length","file","append","post","push","console","log","response","uploadFiles","filesize","alert","onClick","Routes","path","component","createGlobalStyle","App","basename","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1211a9bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/income.df4567f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/outcome.bb31a5f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/total.7f99c5ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ce269cac.svg\";","module.exports = __webpack_public_path__ + \"static/media/alert.78a343ae.svg\";","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3333',\n});\n\nexport default api;\n","import styled from 'styled-components';\n\ninterface ContainerProps {\n  size?: 'small' | 'large';\n}\n\nexport const Container = styled.div<ContainerProps>`\n  background: #5636d3;\n  padding: 30px 0;\n\n  .activeLink {\n    border-bottom: 2px solid #ff872c;\n    padding-bottom: 10px;\n  }\n\n  header {\n    width: 1120px;\n    margin: 0 auto;\n    padding: ${({ size }) => (size === 'small' ? '0 20px ' : '0 20px 150px')};\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    nav {\n      a {\n        color: #fff;\n        text-decoration: none;\n        font-size: 16px;\n        transition: opacity 0.2s;\n\n        & + a {\n          margin-left: 32px;\n        }\n\n        &:hover {\n          opacity: 0.6;\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\n\nimport { Link, NavLink } from 'react-router-dom';\n\nimport { Container } from './styles';\n\nimport Logo from '../../assets/logo.svg';\n\ninterface HeaderProps {\n  size?: 'small' | 'large';\n}\n\nconst Header: React.FC<HeaderProps> = ({ size = 'large' }: HeaderProps) => (\n  <Container size={size}>\n    <header>\n      <img src={Logo} alt=\"GoFinances\" />\n      <nav>\n        <NavLink exact to=\"/\" activeClassName=\"activeLink\">\n          Listagem\n        </NavLink>\n        <NavLink to=\"/import\" activeClassName=\"activeLink\">\n          Importar\n        </NavLink>\n      </nav>\n    </header>\n  </Container>\n);\n\nexport default Header;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\nimport { shade } from 'polished';\n\n// import { Container } from './styles';\n\ninterface ILoaderCardBalance {\n  color: string;\n  shadeValue: number;\n}\n\nconst LoaderCardBalance: React.FC<ILoaderCardBalance> = ({ color, shadeValue }) => {\n  return (\n    <ContentLoader \n      speed={1}\n      width={235}\n      height={61}\n      viewBox=\"0 0 235 61\"\n      backgroundColor={color}\n      foregroundColor={shade(shadeValue, color)}\n    >\n      <rect x=\"0\" y=\"20\" rx=\"8\" ry=\"8\" width=\"235\" height=\"42\" />\n  </ContentLoader>\n  );\n}\n\nexport default LoaderCardBalance;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 62px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #fff;\n  border-radius: 8px;\n  margin-bottom: 8px;\n`;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\nimport { shade } from 'polished';\n\nimport { Container } from './styles';\n\ninterface ILoaderCardTransaction {\n  color: string;\n  shadeValue: number;\n}\n\nconst LoaderCardTransaction: React.FC<ILoaderCardTransaction> = ({ color, shadeValue }) => {\n  return (\n    <Container>\n      <ContentLoader \n        speed={1}\n        width={1080}\n        height={62}\n        viewBox=\"0 0 1080 62\"\n        backgroundColor={shade(shadeValue, color)}\n          foregroundColor={color}\n      >\n        <rect x=\"0\" y=\"0\" rx=\"8\" ry=\"8\" width=\"100%\" height=\"62px\" />\n      </ContentLoader>\n    </Container>\n  );\n}\n\nexport default LoaderCardTransaction;","const formatValue = (value: number): string =>\n  Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(\n    value,\n  );\n\nexport default formatValue;\n","const formatDate = (date: Date): string => {\n  return Intl.DateTimeFormat('pt-BR').format(date);\n};\n\nexport default formatDate;\n","import styled from 'styled-components';\n\ninterface CardProps {\n  total?: boolean;\n}\n\nexport const Container = styled.div`\n  width: 100%;\n  max-width: 1120px;\n  margin: 0 auto;\n  padding: 40px 20px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: #3a3a3a;\n`;\n\nexport const CardContainer = styled.section`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 32px;\n  margin-top: -150px;\n`;\n\nexport const Card = styled.div`\n  background: ${({ total }: CardProps): string => (total ? '#FF872C' : '#fff')};\n  padding: 22px 32px;\n  border-radius: 5px;\n  color: ${({ total }: CardProps): string => (total ? '#fff' : '#363F5F')};\n\n  header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    p {\n      font-size: 16px;\n    }\n  }\n\n  h1 {\n    margin-top: 14px;\n    font-size: 36px;\n    font-weight: normal;\n    line-height: 54px;\n  }\n`;\n\nexport const TableContainer = styled.section`\n  margin-top: 64px;\n\n  table {\n    width: 100%;\n    border-spacing: 0 8px;\n\n    th {\n      color: #969cb3;\n      font-weight: normal;\n      padding: 20px 32px;\n      text-align: left;\n      font-size: 16px;\n      line-height: 24px;\n    }\n\n    td {\n      padding: 20px 32px;\n      border: 0;\n      background: #fff;\n      font-size: 16px;\n      font-weight: normal;\n      color: #969cb3;\n\n      &.title {\n        color: #363f5f;\n      }\n\n      &.income {\n        color: #12a454;\n      }\n\n      &.outcome {\n        color: #e83f5b;\n      }\n    }\n\n    td:first-child {\n      border-radius: 8px 0 0 8px;\n    }\n\n    td:last-child {\n      border-radius: 0 8px 8px 0;\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\n\nimport income from '../../assets/income.svg';\nimport outcome from '../../assets/outcome.svg';\nimport total from '../../assets/total.svg';\n\nimport api from '../../services/api';\n\nimport Header from '../../components/Header';\nimport LoaderCardBalance from '../../components/LoaderCardBalance';\nimport LoaderCardTransaction from '../../components/LoaderCardTransaction';\n\nimport formatValue from '../../utils/formatValue';\nimport formatDate from '../../utils/formatDate';\n\nimport { Container, CardContainer, Card, TableContainer } from './styles';\n\ninterface Transaction {\n  id: string;\n  title: string;\n  value: number;\n  formattedValue: string;\n  formattedDate: string;\n  type: 'income' | 'outcome';\n  category: { title: string };\n  created_at: Date;\n}\n\ninterface Balance {\n  income: string;\n  outcome: string;\n  total: string;\n}\n\nconst Dashboard: React.FC = () => {\n  const [transactions, setTransactions] = useState<Transaction[]>(() => {\n    const transactions = localStorage.getItem('@GoFinances:transactions');\n\n    if (transactions) return JSON.parse(transactions);\n\n    return [] as Transaction[];\n  });\n  const [balance, setBalance] = useState<Balance>(() => {\n    const balance = localStorage.getItem('@GoFinances:balance');\n\n    if(balance) {\n      return JSON.parse(balance);\n    }\n\n    return {} as Balance;\n  });\n  const [showLoader, setShowLoader] = useState(true);\n  const fakeTransactions = [1, 2, 3, 4, 5, 6, 7, 8];\n\n\n  const [alreadyLoaded, setAlreadyLoaded] = useState(() => {\n    const alreadyLoadedTransactions = localStorage.getItem(\"@GoFinances:import\");\n    \n    if (alreadyLoadedTransactions) {\n      setShowLoader(showLoader => !showLoader);\n\n      return true;\n    }\n\n    return false;\n  });\n\n  useEffect(() => {\n    async function loadTransactions(): Promise<void> {\n      const { data } = await api.get('transactions');\n\n      const transactionsFormatted = data.transactions.map(\n        (transaction: Transaction) => ({\n          ...transaction,\n          formattedValue: formatValue(transaction.value),\n        }),\n      );\n\n      const balanceFormatted = {\n        income: formatValue(data.balance.income),\n        outcome: formatValue(data.balance.outcome),\n        total: formatValue(data.balance.total),\n      };\n\n      setTransactions(transactionsFormatted);\n      setBalance(balanceFormatted);\n\n      localStorage.setItem('@GoFinances:balance', JSON.stringify(balanceFormatted));\n      localStorage.setItem('@GoFinances:transactions', JSON.stringify(transactionsFormatted));\n\n      if (!alreadyLoaded) {\n        setTimeout(() => {\n          setShowLoader(showLoader => !showLoader);\n        }, 2000);\n      }\n      \n      localStorage.removeItem(\"@GoFinances:import\");\n    }\n    \n    loadTransactions();\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <CardContainer>\n          <Card>\n            <header>\n              <p>Entradas</p>\n              <img src={income} alt=\"Income\" />\n            </header>\n            {showLoader ? <LoaderCardBalance color=\"#f3f3f3\" shadeValue={0.03} /> : <h1 data-testid=\"balance-income\">{balance.income}</h1> }\n          </Card>\n          <Card>\n            <header>\n              <p>Saídas</p>\n              <img src={outcome} alt=\"Outcome\" />\n            </header>\n            {showLoader ? <LoaderCardBalance color=\"#f3f3f3\" shadeValue={0.03}/> : <h1 data-testid=\"balance-income\">{balance.outcome}</h1> }\n          </Card>\n          <Card total>\n            <header>\n              <p>Total</p>\n              <img src={total} alt=\"Total\" />\n            </header>\n            {showLoader ? <LoaderCardBalance color=\"#ff872c\" shadeValue={0.10}/> : <h1 data-testid=\"balance-income\">{balance.total}</h1> }\n          </Card>\n        </CardContainer>\n\n\n        {showLoader ? (\n          <>\n            <TableContainer>\n              <table>\n                <thead>\n                  <tr>\n                    <th>Título</th>\n                    <th>Preço</th>\n                    <th>Categoria</th>\n                    <th>Data</th>\n                  </tr>\n                </thead>\n              </table>\n            </TableContainer>\n\n            {fakeTransactions.map(_ => (\n              <LoaderCardTransaction color=\"#f3f3f3\" shadeValue={0.03} />\n            ))}\n          </>\n        ) : (\n          <TableContainer>\n            <table>\n              <thead>\n                <tr>\n                  <th>Título</th>\n                  <th>Preço</th>\n                  <th>Categoria</th>\n                  <th>Data</th>\n                </tr>\n              </thead>\n        \n              <tbody>\n                {transactions.map(transaction => (\n                  <tr key={transaction.id}>\n                    <td className=\"title\">{transaction.title}</td>\n                    <td className={transaction.type}>\n                      {transaction.type === 'outcome' && ' - '}\n                      {transaction.formattedValue}\n                    </td>\n                    <td>{transaction.category.title}</td>\n                    <td>{formatDate(new Date(transaction.created_at))}</td>\n                  </tr>\n                ))}\n            </tbody>\n            </table>\n          </TableContainer>\n        )}\n\n        \n      </Container>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  margin-top: 20px;\n\n  li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: #444;\n\n    & + li {\n      margin-top: 15px;\n    }\n  }\n`;\n\nexport const FileInfo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex: 1;\n\n  button {\n    border: 0;\n    background: transparent;\n    color: #e83f5b;\n    margin-left: 5px;\n    cursor: pointer;\n  }\n\n  div {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n    span {\n      font-size: 12px;\n      color: #999;\n      margin-top: 5px;\n    }\n  }\n`;\n","import React from 'react';\n\nimport { Container, FileInfo } from './styles';\n\ninterface FileProps {\n  name: string;\n  readableSize: string;\n}\n\ninterface FileListProps {\n  files: FileProps[];\n}\n\nconst FileList: React.FC<FileListProps> = ({ files }: FileListProps) => {\n  return (\n    <Container>\n      {files.map(uploadedFile => (\n        <li key={uploadedFile.name}>\n          <FileInfo>\n            <div>\n              <strong>{uploadedFile.name}</strong>\n              <span>{uploadedFile.readableSize}</span>\n            </div>\n          </FileInfo>\n        </li>\n      ))}\n    </Container>\n  );\n};\n\nexport default FileList;\n","import styled, { css, FlattenSimpleInterpolation } from 'styled-components';\n\ninterface UploadProps {\n  isDragActive: boolean;\n  isDragReject: boolean;\n  refKey?: string;\n  [key: string]: any;\n  type?: 'error' | 'success' | 'default';\n}\n\nconst dragActive = css`\n  border-color: #12a454;\n`;\n\nconst dragReject = css`\n  border-color: #e83f5b;\n`;\n\nexport const DropContainer = styled.div.attrs({\n  className: 'dropzone',\n})`\n  border: 1.5px dashed #969cb3;\n  border-radius: 5px;\n  cursor: pointer;\n\n  transition: height 0.2s ease;\n\n  ${(props: UploadProps): false | FlattenSimpleInterpolation =>\n    props.isDragActive && dragActive}\n\n  ${(props: UploadProps): false | FlattenSimpleInterpolation =>\n    props.isDragReject && dragReject}\n`;\n\nconst messageColors = {\n  default: '#5636D3',\n  error: '#e83f5b',\n  success: '#12a454',\n};\n\nexport const UploadMessage = styled.p`\n  display: flex;\n  font-size: 16px;\n  line-height: 24px;\n  padding: 48px 0;\n\n  color: ${({ type }: UploadProps) => messageColors[type || 'default']};\n\n  justify-content: center;\n  align-items: center;\n`;\n","import React, { ReactNode } from 'react';\n\nimport Dropzone from 'react-dropzone';\nimport { DropContainer, UploadMessage } from './styles';\n\ninterface UploadProps {\n  onUpload: Function;\n}\n\nconst Upload: React.FC<UploadProps> = ({ onUpload }: UploadProps) => {\n  function renderDragMessage(\n    isDragActive: boolean,\n    isDragRejest: boolean,\n  ): ReactNode {\n    if (!isDragActive) {\n      return (\n        <UploadMessage>Selecione ou arraste o arquivo aqui.</UploadMessage>\n      );\n    }\n\n    if (isDragRejest) {\n      return <UploadMessage type=\"error\">Arquivo não suportado</UploadMessage>;\n    }\n\n    return <UploadMessage type=\"success\">Solte o arquivo aqui</UploadMessage>;\n  }\n\n  return (\n    <>\n      <Dropzone\n        accept=\".csv, application/vnd.ms-excel, text/csv\"\n        onDropAccepted={files => onUpload(files)}\n      >\n        {({ getRootProps, getInputProps, isDragActive, isDragReject }): any => (\n          <DropContainer\n            {...getRootProps()}\n            isDragActive={isDragActive}\n            isDragReject={isDragReject}\n          >\n            <input {...getInputProps()} data-testid=\"upload\" />\n            {renderDragMessage(isDragActive, isDragReject)}\n          </DropContainer>\n        )}\n      </Dropzone>\n    </>\n  );\n};\n\nexport default Upload;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Container = styled.div`\n  width: 100%;\n  max-width: 736px;\n  margin: 0 auto;\n  padding: 40px 20px;\n`;\n\nexport const Title = styled.h1`\n  font-weight: 500;\n  font-size: 36px;\n  line-height: 54px;\n  color: #363f5f;\n  text-align: center;\n`;\n\nexport const ImportFileContainer = styled.section`\n  background: #fff;\n  margin-top: 40px;\n  border-radius: 5px;\n  padding: 64px;\n`;\n\nexport const Footer = styled.section`\n  margin-top: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  p {\n    display: flex;\n    align-items: center;\n    font-size: 12px;\n    line-height: 18px;\n    color: #969cb3;\n\n    img {\n      margin-right: 5px;\n    }\n  }\n\n  button {\n    background: #ff872c;\n    color: #fff;\n    border-radius: 5px;\n    padding: 15px 80px;\n    border: 0;\n    transition: background-color 0.2s;\n\n    &:hover {\n      background: ${shade(0.2, '#ff872c')};\n    }\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport filesize from 'filesize';\n\nimport Header from '../../components/Header';\nimport FileList from '../../components/FileList';\nimport Upload from '../../components/Upload';\n\nimport { Container, Title, ImportFileContainer, Footer } from './styles';\n\nimport alert from '../../assets/alert.svg';\nimport api from '../../services/api';\n\ninterface FileProps {\n  file: File;\n  name: string;\n  readableSize: string;\n}\n\nconst Import: React.FC = () => {\n  const [uploadedFiles, setUploadedFiles] = useState<FileProps[]>([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    localStorage.setItem(\"@GoFinances:import\", \"true\");\n  }, []);\n\n  async function handleUpload(): Promise<void> {\n    const data = new FormData();\n\n    if (!uploadedFiles.length) return;\n\n    const file = uploadedFiles[0];\n\n    data.append('file', file.file, file.name);\n\n    try {\n      await api.post('/transactions/import', data);\n\n      history.push('/');\n    } catch (err) {\n      console.log(err.response.error);\n    }\n  }\n\n  function submitFile(files: File[]): void {\n    const uploadFiles = files.map(file => ({\n      file,\n      name: file.name,\n      readableSize: filesize(file.size),\n    }));\n    setUploadedFiles(uploadFiles);\n  }\n\n  return (\n    <>\n      <Header size=\"small\" />\n      <Container>\n        <Title>Importar uma transação</Title>\n        <ImportFileContainer>\n          <Upload onUpload={submitFile} />\n          {!!uploadedFiles.length && <FileList files={uploadedFiles} />}\n\n          <Footer>\n            <p>\n              <img src={alert} alt=\"Alert\" />\n              Permitido apenas arquivos CSV\n            </p>\n            <button onClick={handleUpload} type=\"button\">\n              Enviar\n            </button>\n          </Footer>\n        </ImportFileContainer>\n      </Container>\n    </>\n  );\n};\n\nexport default Import;\n","import React from 'react';\n\nimport { Switch, Route } from 'react-router-dom';\n\nimport Dashboard from '../pages/Dashboard';\nimport Import from '../pages/Import';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Dashboard} />\n    <Route path=\"/import\" component={Import} />\n  </Switch>\n);\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #F0F2F5 ;\n    -webkit-font-smoothing: antialiased\n  }\n\n  body, input, button {\n    font: 16px \"Poppins\", sans-serif;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Routes from './routes';\n\nimport GlobalStyle from './styles/global';\n\nconst App: React.FC = () => (\n  <>\n    <GlobalStyle />\n    <Router basename={process.env.PUBLIC_URL}>\n      <Routes />\n    </Router>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}